name: Build and release installers

permissions:
  contents: write

env:
  RUSTFLAGS: "-C target-feature=+crt-static"

on:
  push:
    tags:
      - v[0-9]+.*
  release:
    types: [created]
    
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          draft: true
          branch: main
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
 
  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            build-tool: cross
          - target: x86_64-apple-darwin
            os: macos-latest
            build-tool: cargo
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            build-tool: cargo
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: jati
          target: ${{ matrix.target }}
          build-tool: ${{ matrix.build-tool }}
          include: LICENSE-APACHE,LICENSE-MIT,README.md
          tar: unix
          zip: windows
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets-parallel:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: jati-parallel
          target: ${{ matrix.target }}
          build-tool: ${{ matrix.build-tool }}
          include: LICENSE-APACHE,LICENSE-MIT,README.md
          tar: unix
          zip: windows
          features: parallel
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
