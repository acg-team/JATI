name: Build and release installers

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*
  release:
    types: [created]
    
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          draft: true
          branch: main
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
 
  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: jati
          target: ${{ matrix.target }}
          include: LICENSE-APACHE,LICENSE-MIT,README.md
          tar: unix
          zip: windows
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets-parallel:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: jati-parallel
          target: ${{ matrix.target }}
          include: LICENSE-APACHE,LICENSE-MIT,README.md
          tar: unix
          zip: windows
          features: parallel
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}


  # upload-assets-parallel:
  #   needs: create-release
  #   strategy:
  #     matrix:
  #       include:
  #         - target: x86_64-unknown-linux-gnu
  #           os: ubuntu-latest
  #         - target: x86_64-apple-darwin
  #           os: macos-latest
  #         - target: x86_64-pc-windows-msvc
  #           os: windows-latest
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: taiki-e/upload-rust-binary-action@v1
  #       with:
  #         # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
  #         # Note that glob pattern is not supported yet.
  #         bin: jati-parallel
  #         # (optional) Target triple, default is host triple.
  #         target: ${{ matrix.target }}
  #         # (optional) On which platform to distribute the `.tar.gz` file.
  #         # [default value: unix]
  #         # [possible values: all, unix, windows, none]
  #         tar: unix
  #         # (optional) On which platform to distribute the `.zip` file.
  #         # [default value: windows]
  #         # [possible values: all, unix, windows, none]
  #         zip: windows
  #         features: parallel
  #         # (optional) Build with the given set of features if any.
  #         # (required) GitHub token for uploading assets to GitHub Releases.
  #         token: ${{ secrets.GITHUB_TOKEN }}
