name: Build and release installers

on:
  push:
    branches: [main]
  release:
    types: [published]


    
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        features: ["" , "parallel"]
    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install packaging tools (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          cargo install cargo-deb
          cargo install cargo-rpm

      - name: Install packaging tools (Windows)
        if: matrix.os == 'windows-latest'
        run: cargo install cargo-wix

      - name: Run tests
        run: cargo test --release ${{ matrix.features && format('--features {0}', matrix.features) || '' }}

      - name: Build release binary
        run: cargo build --release ${{ matrix.features && format('--features {0}', matrix.features) || '' }}

      # Strip release binary (Linux and macOS)
      - name: Strip release binary (Linux/macOS)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: strip target/release/${{ github.event.repository.name }}

      - name: Rename binary for feature variant
        run: |
          suffix=""
          if [ "${{ matrix.features }}" = "parallel" ]; then
            suffix="-parallel"
          fi
          mv target/release/${{ github.event.repository.name }} target/release/${{ github.event.repository.name }}${suffix}
        shell: bash

      # Linux: Package .deb and .rpm
      - name: Package as .deb (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          suffix=""
          if [ "${{ matrix.features }}" = "parallel" ]; then
            suffix="-parallel"
          fi
          cargo deb --no-build --install-path target/release/${{ github.event.repository.name }}${suffix}
        shell: bash
      - name: Package as .rpm (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          suffix=""
          if [ "${{ matrix.features }}" = "parallel" ]; then
            suffix="-parallel"
          fi
          cargo rpm build --no-build --install-path target/release/${{ github.event.repository.name }}${suffix}
        shell: bash

      # Windows: Package as .msi
      - name: Prepare WiX (Windows)
        if: matrix.os == 'windows-latest'
        run: cargo wix init || true

      - name: Package as .msi (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $suffix = ""
          if ("${{ matrix.features }}" -eq "parallel") {
            $suffix = "-parallel"
          }
          cargo wix --no-build --binary target/release/${{ github.event.repository.name }}$suffix
        shell: pwsh

      # MacOS: Zip binary
      - name: Zip release binary (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          suffix=""
          if [ "${{ matrix.features }}" = "parallel" ]; then
            suffix="-parallel"
          fi
          zip -j target/release/${{ github.event.repository.name }}${suffix}-macos.zip target/release/${{ github.event.repository.name }}${suffix}
        shell: bash

      # Collect artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: installers-${{ matrix.os }}${{ matrix.features && format('-{0}', matrix.features) || '' }}
          path: |
            target/debian/*.deb
            target/rpmbuild/RPMS/x86_64/*.rpm
            target/wix/*.msi
            target/release/*.exe
            target/release/${{ github.event.repository.name }}*-macos.zip
            target/release/${{ github.event.repository.name }}*

      # Attach to release if this is a release build
      - name: Upload to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/debian/*.deb
            target/rpmbuild/RPMS/x86_64/*.rpm
            target/wix/*.msi
            target/release/*.exe
            target/release/${{ github.event.repository.name }}-macos.zip
            target/release/${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
